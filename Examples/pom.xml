<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.6.6</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.example</groupId>
    <artifactId>Examples</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>Examples</name>
    <description>Demo project for Spring Boot</description>

    <repositories>
        <repository>
            <id>repo</id>
            <name>repo</name>
            <url>https://github.com/johanjanssen/JavaHiddenGems</url>
        </repository>
    </repositories>


    <properties>
        <java.version>17</java.version>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Spark -->
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-core_2.12</artifactId>
            <version>3.2.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-sql_2.12</artifactId>
            <version>3.2.1</version>
            <exclusions>
                <exclusion>
                    <artifactId>janino</artifactId>
                    <groupId>org.codehaus.janino</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>commons-compiler</artifactId>
                    <groupId>org.codehaus.janino</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.codehaus.janino</groupId>
            <artifactId>janino</artifactId>
            <version>3.1.6</version>
        </dependency>
        <dependency>
            <groupId>org.codehaus.janino</groupId>
            <artifactId>commons-compiler</artifactId>
            <version>3.1.7</version>
        </dependency>
        <!-- End Spark -->

        <dependency>
            <groupId>com.vladsch.flexmark</groupId>
            <artifactId>flexmark-all</artifactId>
            <version>0.64.0</version>
        </dependency>

        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>1.14.3</version>
        </dependency>

        <!-- Added as an example of a vulnerable dependency -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>2.11.2</version>
        </dependency>

        <!-- Added as an duplicate example of a vulnerable dependency for the enforcer plugin -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>2.7</version>
        </dependency>

        <!-- Example for Old GroupIds Alerter -->
        <!-- https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api -->
        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>2.3.1</version>
        </dependency>

        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>3.22.0</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.squareup</groupId>
            <artifactId>javapoet</artifactId>
            <version>1.13.0</version>
        </dependency>

        <dependency>
            <groupId>nl.jqno.equalsverifier</groupId>
            <artifactId>equalsverifier</artifactId>
            <version>3.10</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.passay</groupId>
            <artifactId>passay</artifactId>
            <version>1.6.1</version>
        </dependency>

        <dependency>
            <groupId>com.googlecode.libphonenumber</groupId>
            <artifactId>libphonenumber</artifactId>
            <version>8.12.46</version>
        </dependency>
        <dependency>
            <groupId>com.googlecode.libphonenumber</groupId>
            <artifactId>geocoder</artifactId>
            <version>2.182</version>
        </dependency>
        <dependency>
            <groupId>com.googlecode.libphonenumber</groupId>
            <artifactId>carrier</artifactId>
            <version>1.172</version>
        </dependency>

        <dependency>
            <groupId>com.tngtech.archunit</groupId>
            <artifactId>archunit</artifactId>
            <version>0.23.1</version>
            <scope>test</scope>
        </dependency>

        <!-- jdbi -->
        <dependency>
            <groupId>org.jdbi</groupId>
            <artifactId>jdbi3-core</artifactId>
            <version>3.28.0</version>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>runtime</scope>
        </dependency>
        <!-- End jdbi -->

        <!-- Also see the annotation processor in the maven-compiler-plugin -->
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>1.4.2.Final</version>
        </dependency>

        <!-- Also see the annotation processor in the maven-compiler-plugin -->
        <dependency>
            <groupId>com.google.auto.value</groupId>
            <artifactId>auto-value-annotations</artifactId>
            <version>1.9</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
            <version>5.1.0</version>
        </dependency>

        <dependency>
            <groupId>io.vavr</groupId>
            <artifactId>vavr</artifactId>
            <version>0.10.4</version>
        </dependency>

        <!-- REST-assured -->
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <version>4.5.1</version>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>json-path</artifactId>
            <version>4.5.1</version>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>xml-path</artifactId>
            <version>4.5.1</version>
        </dependency>
        <!-- End REST-assured -->

        <!-- Apache POI -->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>5.2.2</version>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>5.2.2</version>
        </dependency>
        <!-- End Apache POI -->

        <dependency>
            <groupId>com.itextpdf</groupId>
            <artifactId>itextpdf</artifactId>
            <version>5.5.13.3</version>
        </dependency>


        <!-- Retrofit -->
        <dependency>
            <groupId>com.squareup.retrofit2</groupId>
            <artifactId>retrofit</artifactId>
            <version>2.9.0</version>
        </dependency>
        <dependency>
            <groupId>com.squareup.retrofit2</groupId>
            <artifactId>converter-gson</artifactId>
            <version>2.9.0</version>
        </dependency>
        <!-- End Retrofit -->

        <!-- RESTEasy -->
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-client</artifactId>
            <version>6.0.0.Final</version>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-jackson2-provider</artifactId>
            <version>6.0.0.Final</version>
        </dependency>
        <dependency>
            <groupId>jakarta.xml.bind</groupId>
            <artifactId>jakarta.xml.bind-api</artifactId>
            <version>3.0.1</version>
        </dependency>
        <dependency>
            <groupId>jakarta.annotation</groupId>
            <artifactId>jakarta.annotation-api</artifactId>
            <version>2.1.0</version>
        </dependency>
        <dependency> <!-- For Spring Boot with Retrofit -->
            <groupId>javax.annotation</groupId>
            <artifactId>javax.annotation-api</artifactId>
            <version>1.3.2</version>
        </dependency>
        <!-- End RESTEasy -->

        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <version>4.2.0</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.github.classgraph</groupId>
            <artifactId>classgraph</artifactId>
            <version>4.8.143</version>
        </dependency>

        <dependency>
            <groupId>org.moditect.jfrunit</groupId>
            <artifactId>jfrunit-core</artifactId>
            <version>1.0.0.Alpha2</version>
            <scope>test</scope>
        </dependency>

        <!-- Also see application.properties -->
        <dependency>
            <groupId>org.jobrunr</groupId>
            <artifactId>jobrunr-spring-boot-starter</artifactId>
            <version>5.0.0</version>
        </dependency>


        <!-- Testcontainers, also see BOM in dependencyManagement -->
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>mysql</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>testcontainers</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>8.0.28</version>
        </dependency>
        <!-- End Testcontainers -->

        <dependency>
            <groupId>com.github.tomakehurst</groupId>
            <artifactId>wiremock-jre8</artifactId>
            <version>2.33.0</version>
            <scope>test</scope>
        </dependency>

        <!-- MicroStream -->
        <dependency>
            <groupId>one.microstream</groupId>
            <artifactId>microstream-storage-embedded</artifactId>
            <version>06.01.00-MS-GA</version>
        </dependency>
        <dependency>
            <groupId>one.microstream</groupId>
            <artifactId>microstream-storage-embedded-configuration</artifactId>
            <version>06.01.00-MS-GA</version>
        </dependency>
        <!-- End MicroStream -->

        <!-- Shows Micrometer -->
        <!-- See application.properties -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
        <!-- End Micrometer -->

        <!-- jOOQ -->
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq</artifactId>
            <version>3.16.5</version>
        </dependency>
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq-meta</artifactId>
            <version>3.16.5</version>
        </dependency>
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq-codegen</artifactId>
            <version>3.16.5</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jooq</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.jooq</groupId>
                    <artifactId>jooq</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- End jOOQ -->

        <!-- Also see compiler-plugin annotationprocessor -->
        <dependency>
            <groupId>com.google.auto.service</groupId>
            <artifactId>auto-service-annotations</artifactId>
            <version>1.0.1</version>
        </dependency>

        <dependency>
            <groupId>com.github.jknack</groupId>
            <artifactId>handlebars</artifactId>
            <version>4.3.0</version>
        </dependency>

        <!-- TypeSafe config -->
        <dependency>
            <groupId>com.typesafe</groupId>
            <artifactId>config</artifactId>
            <version>1.4.2</version>
        </dependency>
        <!-- Optional extra dependency for TypeSafe config to hot reload configuration without restarting the application -->
        <dependency>
            <groupId>pl.touk</groupId>
            <artifactId>tsc-reload</artifactId>
            <version>0.6.1</version>
        </dependency>
        <!-- End TypeSafe config -->

        <!-- Togglz -->
        <!-- Togglz for Servlet environments (mandatory), there is an alternative non Spring Boot dependency-->
        <dependency>
            <groupId>org.togglz</groupId>
            <artifactId>togglz-spring-boot-starter</artifactId>
            <version>3.1.1</version>
        </dependency>

        <!-- Togglz Admin Console -->
        <dependency>
            <groupId>org.togglz</groupId>
            <artifactId>togglz-console</artifactId>
            <version>3.1.1</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>

        <!-- End Togglz -->

        <!-- ShedLock -->
        <dependency>
            <groupId>net.javacrumbs.shedlock</groupId>
            <artifactId>shedlock-spring</artifactId>
            <version>4.33.0</version>
        </dependency>
        <!-- More for testing, normally use a better storage solution -->
        <dependency>
            <groupId>net.javacrumbs.shedlock</groupId>
            <artifactId>shedlock-provider-inmemory</artifactId>
            <version>4.33.0</version>
        </dependency>
        <!-- End ShedLock -->

        <!-- graphql -->
        <dependency>
            <groupId>com.graphql-java</groupId>
            <artifactId>graphql-java</artifactId>
            <version>230521-nf-execution</version>
        </dependency>
        <dependency>
            <groupId>com.graphql-java</groupId>
            <artifactId>graphql-java-tools</artifactId>
            <version>5.2.4</version>
        </dependency>
        <dependency>
            <groupId>com.graphql-java</groupId>
            <artifactId>graphql-java-servlet</artifactId>
            <version>6.1.3</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.0.1</version>
            <scope>provided</scope>
        </dependency>
        <!-- End graphql -->

        <!-- jMolecules: also see plugin -->
        <dependency>
            <groupId>org.jmolecules</groupId>
            <artifactId>jmolecules-ddd</artifactId>
            <version>1.4.0</version>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jmolecules.integrations</groupId>
            <artifactId>jmolecules-spring-data-jpa</artifactId>
            <version>0.3.0</version>
        </dependency>
        <dependency> <!-- Also see compiler-plugin -->
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.24</version>
            <scope>provided</scope>
        </dependency>
        <!-- End jMolecules -->

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <mainClass>com.examples.shared.CarApplication</mainClass>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.10.1</version>
                <configuration>
                    <release>${java.version}</release>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>1.18.24</version>
                        </path>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>1.4.2.Final</version>
                        </path>
                        <path>
                            <groupId>com.google.auto.value</groupId>
                            <artifactId>auto-value</artifactId>
                            <version>1.9</version>
                        </path>
                        <path>
                            <groupId>com.google.auto.service</groupId>
                            <artifactId>auto-service</artifactId>
                            <version>1.0.1</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M6</version>
                <configuration>
                    <!-- For Spark as the current version doesn't support Java 17-->
                    <argLine>
                        --add-opens=java.base/sun.nio.ch=ALL-UNNAMED
                    </argLine>
                </configuration>
            </plugin>

            <!-- mvn verify -->
            <plugin>
                <groupId>org.owasp</groupId>
                <artifactId>dependency-check-maven</artifactId>
                <version>7.0.4</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>3.2.2</version>
            </plugin>

            <!-- mvn validate -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>enforce-versions</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>3.8.5</version>
                                </requireMavenVersion>
                                <requireJavaVersion>
                                    <version>17</version>
                                </requireJavaVersion>
                                <requireOS>
                                    <family>windows</family>
                                </requireOS>
                                <!-- Not allowed to define the same dependency with two different versions inside this POM -->
                                <banDuplicatePomDependencyVersions/>
                                <!-- Not allowed to have the same (transitive) dependency with two different versions -->
                                <dependencyConvergence/>
                                <!-- Not allowed to used snapshot dependencies -->
                                <requireReleaseDeps/>
                                <!-- Not allowed to use these specific dependencies -->
                                <bannedDependencies>
                                    <!-- These are not allowed-->
                                    <excludes>
                                        <exclude>javax.*</exclude>
                                        <exclude>org.apache.logging.log4j:log4j-core:*</exclude>
                                    </excludes>
                                    <!-- These are allowed -->
                                    <includes>
                                        <!--2.16.0 and higher of log4j are allowed -->
                                        <include>org.apache.logging.log4j:log4j-core:2.16.0</include>
                                    </includes>
                                </bannedDependencies>
                            </rules>
                            <!-- For testing purposes, makes sure the build doesn't stop when enforced rules are broken -->
                            <fail>false</fail>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- mvn biz.lermitage.oga:oga-maven-plugin:check -->
            <!-- First start the FileServer in com.examples.old.groupids.alerter as the normal host gives some security issues-->
            <plugin>
                <groupId>biz.lermitage.oga</groupId>
                <artifactId>oga-maven-plugin</artifactId>
                <version>1.7.0</version>
                <configuration>
                    <ogDefinitionsUrl>http://localhost:8080/old-groupids-alerter/og-definitions.json</ogDefinitionsUrl>
                </configuration>
            </plugin>

            <!-- mvn -DwithHistory test-compile org.pitest:pitest-maven:mutationCoverage -->
            <plugin>
                <groupId>org.pitest</groupId>
                <artifactId>pitest-maven</artifactId>
                <version>1.7.5</version>
                <configuration>
                    <targetClasses>
                        <param>com.examples.*</param>
                    </targetClasses>
                    <targetTests>
                        <param>com.examples.*</param>
                    </targetTests>
                    <excludedTestClasses>
                        <excludedTestClass>com.examples**.*IT</excludedTestClass>
                    </excludedTestClasses>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.pitest</groupId>
                        <artifactId>pitest-junit5-plugin</artifactId>
                        <version>0.15</version>
                    </dependency>
                </dependencies>
            </plugin>

            <!-- Make sure to specify the java.version property in the pom.xml -->
            <!-- mvn compile jib:build pushes to remote repo-->
            <!-- mvn jib:dockerBuild doesn't push to remote repo -->
            <!-- Default Java 8 base image -->
            <!-- Run the resulting image with Docker: docker run -p 8080:8080 javahiddengems -->
            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>3.2.1</version>
                <configuration>
                    <to>
                        <image>javahiddengems</image>
                    </to>
                    <container>
                        <mainClass>com.examples.shared.CarApplication</mainClass>
                    </container>
                </configuration>
            </plugin>

            <!-- Make sure to specify the java.version property in the pom.xml -->
            <!-- Buildpack, no pom change needed: mvnw spring-boot:build-image -Dmaven.test.skip -Dspring-boot.build-image.imageName=buildpackjavahiddengems-->
            <!-- Run the resulting image with Docker: docker run -p 8080:8080 buildpackjavahiddengems -->
            <!-- The result of the command: docker images. The size is mainly because of the huge amount of dependencies used for this project. -->
            <!-- buildpackjavahiddengems    ...   499MB -->
            <!-- javahiddengems             ...   512MB -->

            <!-- See jqassistant\my-rules.adoc -->
            <!-- It doesn't work out of the box due to the Neo4j version used to remain compatible https://jqassistant.github.io/jqassistant/doc/1.11.1/manual/#_maven-->
            <plugin>
                <groupId>com.buschmais.jqassistant</groupId>
                <artifactId>jqassistant-maven-plugin</artifactId>
                <version>1.12.0-M1</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>scan</goal>
                            <goal>analyze</goal>
                        </goals>
                        <configuration>
                            <warnOnSeverity>MINOR</warnOnSeverity>
                            <failOnSeverity>MAJOR</failOnSeverity>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- mvn jreleaser:config -->
            <!-- mvn jreleaser:changelog -->
            <!-- mvn jreleaser:full-release -Djreleaser.dryrun=true -->
            <!-- Configure JRELEASER_GITHUB_TOKEN environment variable with GitHub personal token -->
            <plugin>
                <groupId>org.jreleaser</groupId>
                <artifactId>jreleaser-maven-plugin</artifactId>
                <version>1.0.0-RC2</version>
                <configuration>
                    <gitRootSearch>true</gitRootSearch><!-- Needed as pom.xml is not in Git root directory -->
                    <jreleaser>
                        <release>
                            <github>
                                <changelog><!-- Make sure at least one tag is present -->
                                    <enabled>true</enabled>
                                    <formatted>ALWAYS</formatted>
                                    <preset>gitmoji</preset>
                                    <format>- {{commitShortHash}} {{commitTitle}}</format>
                                </changelog>
                            </github>
                        </release>
                    </jreleaser>
                </configuration>
            </plugin>


            <!-- jOOQ -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>sql-maven-plugin</artifactId><!-- Old and no updates for years-->
                <version>1.5</version>

                <!-- Skip DB creation if the value of the skip.db.creation property is true -->
                <!--                <configuration>-->
                <!--                    <skip>${skip.db.creation}</skip>-->
                <!--                </configuration>-->

                <executions>
                    <!-- Execute SQL statements to the configured database -->
                    <execution>
                        <id>create-database-h2</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <driver>org.h2.Driver</driver>
                            <url>jdbc:h2:~/jooq</url>
                            <!--                            <username>${db.username}</username>-->
                            <!--                            <password>${db.password}</password>-->

                            <!-- Ensure that our changes are committed automatically -->
                            <autocommit>true</autocommit>
                            <!-- Configure the location of the invoked SQL script -->
                            <srcFiles>
                                <srcFile>src/main/resources/schema.sql</srcFile>
                            </srcFiles>
                        </configuration>
                    </execution>
                </executions>

                <dependencies>
                    <!--
                        Because we use the H2 database, we have to add it as the dependency
                        of this plugin.
                    -->
                    <dependency>
                        <groupId>com.h2database</groupId>
                        <artifactId>h2</artifactId>
                        <version>${h2.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <!-- Specify the maven code generator plugin -->
                <!-- Use org.jooq                for the Open Source Edition
                         org.jooq.pro            for commercial editions with Java 17 support,
                         org.jooq.pro-java-11    for commercial editions with Java 11 support,
                         org.jooq.pro-java-8     for commercial editions with Java 8 support,
                         org.jooq.trial          for the free trial edition with Java 17 support,
                         org.jooq.trial-java-11  for the free trial edition with Java 11 support,
                         org.jooq.trial-java-8   for the free trial edition with Java 8 support

                     Note: Only the Open Source Edition is hosted on Maven Central.
                           Import the others manually from your distribution -->
                <groupId>org.jooq</groupId>
                <artifactId>jooq-codegen-maven</artifactId>
                <version>3.16.5</version>

                <executions>
                    <execution>
                        <id>jooq-codegen</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>com.h2database</groupId>
                        <artifactId>h2</artifactId>
                        <version>${h2.version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <jdbc>
                        <driver>org.h2.Driver</driver>
                        <url>jdbc:h2:~/jooq</url>
                    </jdbc>
                    <generator>
                        <name>org.jooq.codegen.DefaultGenerator</name>
                        <database>
                            <name>org.jooq.meta.h2.H2Database</name>
                            <includes>.*</includes>
                            <excludes/>
                            <inputSchema>PUBLIC</inputSchema>
                        </database>
                        <target>
                            <packageName>com.examples.jooq.generated</packageName>
                            <directory>src/main/java/</directory>
                        </target>
                    </generator>
                </configuration>
            </plugin>
            <plugin>
                <groupId>net.bytebuddy</groupId>
                <artifactId>byte-buddy-maven-plugin</artifactId>
                <version>1.12.10</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>transform</goal> <!-- Enable the source code transformation -->
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency> <!-- Apply jMolecules transformations -->
                        <groupId>org.jmolecules.integrations</groupId>
                        <artifactId>jmolecules-bytebuddy</artifactId>
                        <version>0.9.0</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers-bom</artifactId>
                <version>1.16.3</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
</project>
